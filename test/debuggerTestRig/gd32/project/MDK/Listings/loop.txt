; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\loop.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\loop.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\startup -I..\..\cmsis-core -I..\src -I..\..\GIGA32\inc -I..\..\GIGA32\src -I..\..\GIGA32\gd32\peripherals\inc -I..\..\GIGA32\gd32\peripherals\src -I.\RTE\_Target_1 -IF:\software\mdk\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\software\mdk\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F10X_MD -DDAPLINK_VERSION=242 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DINTERFACE_GD32F103 -DCPU_GD32F103CBT6 -DDAPLINK_HIC_ID=0x97969905 -DBL_TARGET_FLASH -DUSE_STDPERIPH_DRIVER -DGD32F10X_MD -DUSE_HSE_16MHZ --omf_browse=.\objects\loop.crf ..\src\loop.c]
                          THUMB

                          AREA ||i.buttonTest||, CODE, READONLY, ALIGN=2

                  buttonTest PROC
;;;155    
;;;156    void buttonTest()
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;157    {
;;;158        static uint16_t cnt_20ms = 0;
;;;159        bool buttonState = true;
;;;160        while(cnt_20ms++ < 500)
;;;161        {
;;;162            buttonState = GPIO_ReadInputBit(GPIOB, GPIO_PIN_7);
000004  4e11              LDR      r6,|L1.76|
000006  4c12              LDR      r4,|L1.80|
000008  f44f75fa          MOV      r5,#0x1f4             ;160
00000c  e00b              B        |L1.38|
                  |L1.14|
00000e  2180              MOVS     r1,#0x80
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       GPIO_ReadInputBit
000016  b108              CBZ      r0,|L1.28|
000018  2701              MOVS     r7,#1
00001a  e000              B        |L1.30|
                  |L1.28|
00001c  2700              MOVS     r7,#0
                  |L1.30|
;;;163            Delayms(20);
00001e  2014              MOVS     r0,#0x14
000020  f7fffffe          BL       Delayms
;;;164    
;;;165            if(buttonState == 0)
000024  b147              CBZ      r7,|L1.56|
                  |L1.38|
000026  8861              LDRH     r1,[r4,#2]            ;160  ; cnt_20ms
000028  1c48              ADDS     r0,r1,#1              ;160
00002a  8060              STRH     r0,[r4,#2]            ;160
00002c  42a9              CMP      r1,r5                 ;160
00002e  d3ee              BCC      |L1.14|
                  |L1.48|
;;;166            {
;;;167                GPIO_ResetBits(GPIOB, GPIO_PIN_6);
;;;168                serialPrintln(cmdRec[5]);
;;;169                break;
;;;170            }
;;;171        }
;;;172        cnt_20ms = 0;
000030  2000              MOVS     r0,#0
000032  8060              STRH     r0,[r4,#2]
;;;173    }
000034  e8bd81f0          POP      {r4-r8,pc}
                  |L1.56|
000038  2140              MOVS     r1,#0x40              ;167
00003a  4630              MOV      r0,r6                 ;167
00003c  f7fffffe          BL       GPIO_ResetBits
000040  4803              LDR      r0,|L1.80|
000042  303b              ADDS     r0,r0,#0x3b           ;168
000044  f7fffffe          BL       serialPrintln
000048  e7f2              B        |L1.48|
;;;174    
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      0x40010c00
                  |L1.80|
                          DCD      ||.data||

                          AREA ||i.checkSerial||, CODE, READONLY, ALIGN=2

                  checkSerial PROC
;;;243    
;;;244    void checkSerial(char c)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;245    {	
;;;246    	if(cmd_index == 0)
000004  4d46              LDR      r5,|L2.288|
000006  4606              MOV      r6,r0                 ;245
000008  2700              MOVS     r7,#0
00000a  782c              LDRB     r4,[r5,#0]  ; cmd_index
00000c  b134              CBZ      r4,|L2.28|
;;;247    	{
;;;248    		memset(command, 0, CMD_LENGTH);
;;;249    	}
;;;250    	if(cmd_index < CMD_LENGTH)
00000e  2c0b              CMP      r4,#0xb
000010  d209              BCS      |L2.38|
                  |L2.18|
;;;251    	{
;;;252    		command[cmd_index++] = c;
000012  4844              LDR      r0,|L2.292|
000014  5506              STRB     r6,[r0,r4]
000016  1c64              ADDS     r4,r4,#1
000018  702c              STRB     r4,[r5,#0]
00001a  e005              B        |L2.40|
                  |L2.28|
00001c  210b              MOVS     r1,#0xb               ;248
00001e  4841              LDR      r0,|L2.292|
000020  f7fffffe          BL       __aeabi_memclr
000024  e7f5              B        |L2.18|
                  |L2.38|
;;;253    	}
;;;254    	else
;;;255    	{
;;;256    		cmd_index = 0;
000026  702f              STRB     r7,[r5,#0]
                  |L2.40|
;;;257    		//memset(command, 0, 10);
;;;258    	}
;;;259    
;;;260    	
;;;261    	if (c != ';') {
000028  2e3b              CMP      r6,#0x3b
00002a  d177              BNE      |L2.284|
;;;262    		//cmd_index = 0;
;;;263            return;
;;;264        }
;;;265    	cmd_index = 0;
00002c  702f              STRB     r7,[r5,#0]
;;;266    
;;;267    	int type = 0;
00002e  2400              MOVS     r4,#0
;;;268    	if(strcmp(command, "INFO;") == 0)
000030  a13d              ADR      r1,|L2.296|
000032  483c              LDR      r0,|L2.292|
000034  f7fffffe          BL       strcmp
000038  0002              MOVS     r2,r0
;;;269    	{
;;;270    		type = INFO;
;;;271    	}
;;;272    	else if(strcmp(command, cmdRec[0]) == 0)
00003a  4839              LDR      r0,|L2.288|
00003c  f1000004          ADD      r0,r0,#4
;;;273    	{
;;;274    		type = SET_SWCLK;
;;;275    	}
;;;276    	else if(strcmp(command, cmdRec[1]) == 0)
000040  f100080b          ADD      r8,r0,#0xb
;;;277    	{
;;;278    		type = SET_SWDIO;
;;;279    	}   
;;;280    	else if(strcmp(command, cmdRec[2]) == 0)
000044  f1000616          ADD      r6,r0,#0x16
;;;281    	{
;;;282    		type = SET_RTS;
;;;283    	}  
;;;284    	else if(strcmp(command, cmdRec[3]) == 0)
000048  f1000521          ADD      r5,r0,#0x21
;;;285    	{
;;;286    		type = SET_CTS;
;;;287    	}            
;;;288        else if(strcmp(command, cmdRec[4]) == 0)
00004c  f100072c          ADD      r7,r0,#0x2c
000050  d024              BEQ      |L2.156|
000052  4601              MOV      r1,r0                 ;272
000054  4833              LDR      r0,|L2.292|
000056  f7fffffe          BL       strcmp
00005a  b308              CBZ      r0,|L2.160|
00005c  4641              MOV      r1,r8                 ;272
00005e  4831              LDR      r0,|L2.292|
000060  f7fffffe          BL       strcmp
000064  b1f0              CBZ      r0,|L2.164|
000066  4631              MOV      r1,r6                 ;276
000068  482e              LDR      r0,|L2.292|
00006a  f7fffffe          BL       strcmp
00006e  b1d8              CBZ      r0,|L2.168|
000070  4629              MOV      r1,r5                 ;280
000072  482c              LDR      r0,|L2.292|
000074  f7fffffe          BL       strcmp
000078  b1c0              CBZ      r0,|L2.172|
00007a  4639              MOV      r1,r7                 ;284
00007c  4829              LDR      r0,|L2.292|
00007e  f7fffffe          BL       strcmp
000082  b1a8              CBZ      r0,|L2.176|
;;;289        {
;;;290            type = BUTTON;
;;;291        }
;;;292        else if(strcmp(command, cmdRec[5]) == 0)
000084  4926              LDR      r1,|L2.288|
000086  4827              LDR      r0,|L2.292|
000088  313b              ADDS     r1,r1,#0x3b
00008a  f7fffffe          BL       strcmp
00008e  b188              CBZ      r0,|L2.180|
;;;293        {
;;;294            type = LED;
;;;295        }
;;;296        else if(strcmp(command, "RUN;") == 0)
000090  a127              ADR      r1,|L2.304|
000092  4824              LDR      r0,|L2.292|
000094  f7fffffe          BL       strcmp
000098  b170              CBZ      r0,|L2.184|
00009a  e00e              B        |L2.186|
                  |L2.156|
00009c  2405              MOVS     r4,#5                 ;270
00009e  e00c              B        |L2.186|
                  |L2.160|
0000a0  240b              MOVS     r4,#0xb               ;274
0000a2  e00a              B        |L2.186|
                  |L2.164|
0000a4  240a              MOVS     r4,#0xa               ;278
0000a6  e008              B        |L2.186|
                  |L2.168|
0000a8  240c              MOVS     r4,#0xc               ;282
0000aa  e006              B        |L2.186|
                  |L2.172|
0000ac  240d              MOVS     r4,#0xd               ;286
0000ae  e004              B        |L2.186|
                  |L2.176|
0000b0  240e              MOVS     r4,#0xe               ;290
0000b2  e002              B        |L2.186|
                  |L2.180|
0000b4  240f              MOVS     r4,#0xf               ;294
0000b6  e000              B        |L2.186|
                  |L2.184|
;;;297        {
;;;298            type = RUN;
0000b8  2411              MOVS     r4,#0x11
                  |L2.186|
0000ba  1f64              SUBS     r4,r4,#5
;;;299        }
;;;300        
;;;301        switch (type) {
0000bc  2c0d              CMP      r4,#0xd
0000be  d22d              BCS      |L2.284|
0000c0  e8dff004          TBB      [pc,r4]
0000c4  072c2c2c          DCB      0x07,0x2c,0x2c,0x2c
0000c8  2c120d16          DCB      0x2c,0x12,0x0d,0x16
0000cc  1a21282c          DCB      0x1a,0x21,0x28,0x2c
0000d0  0900              DCB      0x09,0x00
;;;302            
;;;303            case INFO:
;;;304                ledFlash();
0000d2  f7fffffe          BL       ledFlash
0000d6  e8bd41f0          POP      {r4-r8,lr}
0000da  f7ffbffe          B.W      printInfo
;;;305                cmd_info();
;;;306                break;
;;;307            case SET_SWCLK:
;;;308                cmdSwclk();
0000de  f7fffffe          BL       cmdSwclk
;;;309                serialPrintln(cmdRec[0]);
0000e2  480f              LDR      r0,|L2.288|
0000e4  1d00              ADDS     r0,r0,#4
;;;310                break;
0000e6  e00a              B        |L2.254|
;;;311             case SET_SWDIO:
;;;312                cmdSwdio();
0000e8  f7fffffe          BL       cmdSwdio
0000ec  4640              MOV      r0,r8
;;;313                serialPrintln(cmdRec[1]);
;;;314                break;  
0000ee  e006              B        |L2.254|
;;;315             case SET_RTS:
;;;316                cmdRts();
0000f0  f7fffffe          BL       cmdRts
0000f4  4630              MOV      r0,r6
;;;317                serialPrintln(cmdRec[2]);
;;;318                break;     
0000f6  e002              B        |L2.254|
;;;319             case SET_CTS:
;;;320                cmdCts();
0000f8  f7fffffe          BL       cmdCts
0000fc  4628              MOV      r0,r5
                  |L2.254|
;;;321                serialPrintln(cmdRec[3]);
0000fe  e8bd41f0          POP      {r4-r8,lr}
000102  f7ffbffe          B.W      serialPrintln
000106  4638              MOV      r0,r7
;;;322                break;        
;;;323             case BUTTON:
;;;324                serialPrintln(cmdRec[4]);
000108  f7fffffe          BL       serialPrintln
;;;325                buttonTest();
00010c  e8bd41f0          POP      {r4-r8,lr}
000110  f7ffbffe          B.W      buttonTest
;;;326                break;
;;;327             case LED:
;;;328                ledTest();
000114  e8bd41f0          POP      {r4-r8,lr}
000118  f7ffbffe          B.W      ledTest
                  |L2.284|
;;;329                break;
;;;330             case RUN:
;;;331                 cmd_info();
;;;332                 break;
;;;333            default:
;;;334                break;
;;;335    
;;;336        }
;;;337    }
00011c  e8bd81f0          POP      {r4-r8,pc}
;;;338    
                          ENDP

                  |L2.288|
                          DCD      ||.data||
                  |L2.292|
                          DCD      ||.bss||
                  |L2.296|
000128  494e464f          DCB      "INFO;",0
00012c  3b00    
00012e  00                DCB      0
00012f  00                DCB      0
                  |L2.304|
000130  52554e3b          DCB      "RUN;",0
000134  00      
000135  00                DCB      0
000136  00                DCB      0
000137  00                DCB      0

                          AREA ||i.cmdCts||, CODE, READONLY, ALIGN=2

                  cmdCts PROC
;;;117    
;;;118    void cmdCts(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;119    {
;;;120        GPIO_InitPara  GPIO_InitStructure;
;;;121        GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_13;
000002  f44f5600          MOV      r6,#0x2000
000006  f8ad6000          STRH     r6,[sp,#0]
;;;122        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00000a  2403              MOVS     r4,#3
;;;123        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;124        GPIO_Init(GPIOB, &GPIO_InitStructure);
00000c  4f1e              LDR      r7,|L3.136|
00000e  f88d4002          STRB     r4,[sp,#2]            ;122
000012  2510              MOVS     r5,#0x10              ;123
000014  f88d5003          STRB     r5,[sp,#3]            ;123
000018  4669              MOV      r1,sp
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       GPIO_Init
;;;125        GPIO_SetBits(GPIOB, GPIO_PIN_13);	
000020  4631              MOV      r1,r6
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       GPIO_SetBits
;;;126    	
;;;127        GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_14;
000028  02ae              LSLS     r6,r5,#10
00002a  f8ad6000          STRH     r6,[sp,#0]
;;;128        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00002e  f88d4002          STRB     r4,[sp,#2]
;;;129        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000032  f88d5003          STRB     r5,[sp,#3]
;;;130        GPIO_Init(GPIOB, &GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       GPIO_Init
;;;131        GPIO_SetBits(GPIOB, GPIO_PIN_14);	
00003e  4631              MOV      r1,r6
000040  4638              MOV      r0,r7
000042  f7fffffe          BL       GPIO_SetBits
;;;132    	
;;;133        GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_1;
000046  2002              MOVS     r0,#2
000048  f8ad0000          STRH     r0,[sp,#0]
;;;134        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
;;;135        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;136        GPIO_Init(GPIOA, &GPIO_InitStructure);
00004c  4e0f              LDR      r6,|L3.140|
00004e  f88d4002          STRB     r4,[sp,#2]            ;134
000052  f88d5003          STRB     r5,[sp,#3]            ;135
000056  4669              MOV      r1,sp
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       GPIO_Init
;;;137        GPIO_SetBits(GPIOA, GPIO_PIN_1);
00005e  2102              MOVS     r1,#2
000060  4630              MOV      r0,r6
000062  f7fffffe          BL       GPIO_SetBits
;;;138    
;;;139        GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_0;
000066  2001              MOVS     r0,#1
000068  f8ad0000          STRH     r0,[sp,#0]
;;;140        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00006c  f88d4002          STRB     r4,[sp,#2]
;;;141        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000070  f88d5003          STRB     r5,[sp,#3]
;;;142        GPIO_Init(GPIOA, &GPIO_InitStructure);
000074  4669              MOV      r1,sp
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       GPIO_Init
;;;143        GPIO_ResetBits(GPIOA, GPIO_PIN_0);		
00007c  2101              MOVS     r1,#1
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       GPIO_ResetBits
;;;144    }
000084  bdf8              POP      {r3-r7,pc}
;;;145    
                          ENDP

000086  0000              DCW      0x0000
                  |L3.136|
                          DCD      0x40010c00
                  |L3.140|
                          DCD      0x40010800

                          AREA ||i.cmdRts||, CODE, READONLY, ALIGN=2

                  cmdRts PROC
;;;89     
;;;90     void cmdRts(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;91     {
;;;92         GPIO_InitPara  GPIO_InitStructure;
;;;93         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_13;
000002  f44f5600          MOV      r6,#0x2000
000006  f8ad6000          STRH     r6,[sp,#0]
;;;94         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00000a  2403              MOVS     r4,#3
;;;95         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;96         GPIO_Init(GPIOB, &GPIO_InitStructure);
00000c  4f1e              LDR      r7,|L4.136|
00000e  f88d4002          STRB     r4,[sp,#2]            ;94
000012  2510              MOVS     r5,#0x10              ;95
000014  f88d5003          STRB     r5,[sp,#3]            ;95
000018  4669              MOV      r1,sp
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       GPIO_Init
;;;97         GPIO_SetBits(GPIOB, GPIO_PIN_13);	
000020  4631              MOV      r1,r6
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       GPIO_SetBits
;;;98     	
;;;99         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_14;
000028  02ae              LSLS     r6,r5,#10
00002a  f8ad6000          STRH     r6,[sp,#0]
;;;100        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00002e  f88d4002          STRB     r4,[sp,#2]
;;;101        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000032  f88d5003          STRB     r5,[sp,#3]
;;;102        GPIO_Init(GPIOB, &GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       GPIO_Init
;;;103        GPIO_SetBits(GPIOB, GPIO_PIN_14);	
00003e  4631              MOV      r1,r6
000040  4638              MOV      r0,r7
000042  f7fffffe          BL       GPIO_SetBits
;;;104    	
;;;105        GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_1;
000046  2002              MOVS     r0,#2
000048  f8ad0000          STRH     r0,[sp,#0]
;;;106        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
;;;107        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;108        GPIO_Init(GPIOA, &GPIO_InitStructure);
00004c  4e0f              LDR      r6,|L4.140|
00004e  f88d4002          STRB     r4,[sp,#2]            ;106
000052  f88d5003          STRB     r5,[sp,#3]            ;107
000056  4669              MOV      r1,sp
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       GPIO_Init
;;;109        GPIO_ResetBits(GPIOA, GPIO_PIN_1);
00005e  2102              MOVS     r1,#2
000060  4630              MOV      r0,r6
000062  f7fffffe          BL       GPIO_ResetBits
;;;110    
;;;111        GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_0;
000066  2001              MOVS     r0,#1
000068  f8ad0000          STRH     r0,[sp,#0]
;;;112        GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00006c  f88d4002          STRB     r4,[sp,#2]
;;;113        GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000070  f88d5003          STRB     r5,[sp,#3]
;;;114        GPIO_Init(GPIOA, &GPIO_InitStructure);
000074  4669              MOV      r1,sp
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       GPIO_Init
;;;115        GPIO_SetBits(GPIOA, GPIO_PIN_0);		
00007c  2101              MOVS     r1,#1
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       GPIO_SetBits
;;;116    }
000084  bdf8              POP      {r3-r7,pc}
;;;117    
                          ENDP

000086  0000              DCW      0x0000
                  |L4.136|
                          DCD      0x40010c00
                  |L4.140|
                          DCD      0x40010800

                          AREA ||i.cmdSwclk||, CODE, READONLY, ALIGN=2

                  cmdSwclk PROC
;;;33     
;;;34     void cmdSwclk(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;35     {
;;;36     	GPIO_InitPara  GPIO_InitStructure;
;;;37         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_13;
000002  f44f5600          MOV      r6,#0x2000
000006  f8ad6000          STRH     r6,[sp,#0]
;;;38         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00000a  2403              MOVS     r4,#3
;;;39         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;40         GPIO_Init(GPIOB, &GPIO_InitStructure);
00000c  4f1e              LDR      r7,|L5.136|
00000e  f88d4002          STRB     r4,[sp,#2]            ;38
000012  2510              MOVS     r5,#0x10              ;39
000014  f88d5003          STRB     r5,[sp,#3]            ;39
000018  4669              MOV      r1,sp
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       GPIO_Init
;;;41         GPIO_ResetBits(GPIOB, GPIO_PIN_13);	
000020  4631              MOV      r1,r6
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       GPIO_ResetBits
;;;42     	
;;;43         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_14;
000028  02ae              LSLS     r6,r5,#10
00002a  f8ad6000          STRH     r6,[sp,#0]
;;;44         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00002e  f88d4002          STRB     r4,[sp,#2]
;;;45         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000032  f88d5003          STRB     r5,[sp,#3]
;;;46         GPIO_Init(GPIOB, &GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       GPIO_Init
;;;47         GPIO_SetBits(GPIOB, GPIO_PIN_14);	
00003e  4631              MOV      r1,r6
000040  4638              MOV      r0,r7
000042  f7fffffe          BL       GPIO_SetBits
;;;48     	
;;;49         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_1;
000046  2002              MOVS     r0,#2
000048  f8ad0000          STRH     r0,[sp,#0]
;;;50         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
;;;51         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;52         GPIO_Init(GPIOA, &GPIO_InitStructure);
00004c  4e0f              LDR      r6,|L5.140|
00004e  f88d4002          STRB     r4,[sp,#2]            ;50
000052  f88d5003          STRB     r5,[sp,#3]            ;51
000056  4669              MOV      r1,sp
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       GPIO_Init
;;;53         GPIO_SetBits(GPIOA, GPIO_PIN_1);
00005e  2102              MOVS     r1,#2
000060  4630              MOV      r0,r6
000062  f7fffffe          BL       GPIO_SetBits
;;;54     
;;;55         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_0;
000066  2001              MOVS     r0,#1
000068  f8ad0000          STRH     r0,[sp,#0]
;;;56         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00006c  f88d4002          STRB     r4,[sp,#2]
;;;57         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000070  f88d5003          STRB     r5,[sp,#3]
;;;58         GPIO_Init(GPIOA, &GPIO_InitStructure);
000074  4669              MOV      r1,sp
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       GPIO_Init
;;;59         GPIO_SetBits(GPIOA, GPIO_PIN_0);		
00007c  2101              MOVS     r1,#1
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       GPIO_SetBits
;;;60     }
000084  bdf8              POP      {r3-r7,pc}
;;;61     
                          ENDP

000086  0000              DCW      0x0000
                  |L5.136|
                          DCD      0x40010c00
                  |L5.140|
                          DCD      0x40010800

                          AREA ||i.cmdSwdio||, CODE, READONLY, ALIGN=2

                  cmdSwdio PROC
;;;61     
;;;62     void cmdSwdio(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;63     {
;;;64         GPIO_InitPara  GPIO_InitStructure;
;;;65         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_13;
000002  f44f5600          MOV      r6,#0x2000
000006  f8ad6000          STRH     r6,[sp,#0]
;;;66         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00000a  2403              MOVS     r4,#3
;;;67         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;68         GPIO_Init(GPIOB, &GPIO_InitStructure);
00000c  4f1e              LDR      r7,|L6.136|
00000e  f88d4002          STRB     r4,[sp,#2]            ;66
000012  2510              MOVS     r5,#0x10              ;67
000014  f88d5003          STRB     r5,[sp,#3]            ;67
000018  4669              MOV      r1,sp
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       GPIO_Init
;;;69         GPIO_SetBits(GPIOB, GPIO_PIN_13);	
000020  4631              MOV      r1,r6
000022  4638              MOV      r0,r7
000024  f7fffffe          BL       GPIO_SetBits
;;;70     	
;;;71         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_14;
000028  02ae              LSLS     r6,r5,#10
00002a  f8ad6000          STRH     r6,[sp,#0]
;;;72         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00002e  f88d4002          STRB     r4,[sp,#2]
;;;73         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000032  f88d5003          STRB     r5,[sp,#3]
;;;74         GPIO_Init(GPIOB, &GPIO_InitStructure);
000036  4669              MOV      r1,sp
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       GPIO_Init
;;;75         GPIO_ResetBits(GPIOB, GPIO_PIN_14);	
00003e  4631              MOV      r1,r6
000040  4638              MOV      r0,r7
000042  f7fffffe          BL       GPIO_ResetBits
;;;76     	
;;;77         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_1;
000046  2002              MOVS     r0,#2
000048  f8ad0000          STRH     r0,[sp,#0]
;;;78         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
;;;79         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
;;;80         GPIO_Init(GPIOA, &GPIO_InitStructure);
00004c  4e0f              LDR      r6,|L6.140|
00004e  f88d4002          STRB     r4,[sp,#2]            ;78
000052  f88d5003          STRB     r5,[sp,#3]            ;79
000056  4669              MOV      r1,sp
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       GPIO_Init
;;;81         GPIO_SetBits(GPIOA, GPIO_PIN_1);
00005e  2102              MOVS     r1,#2
000060  4630              MOV      r0,r6
000062  f7fffffe          BL       GPIO_SetBits
;;;82     
;;;83         GPIO_InitStructure.GPIO_Pin   = GPIO_PIN_0;
000066  2001              MOVS     r0,#1
000068  f8ad0000          STRH     r0,[sp,#0]
;;;84         GPIO_InitStructure.GPIO_Speed = GPIO_SPEED_50MHZ;
00006c  f88d4002          STRB     r4,[sp,#2]
;;;85         GPIO_InitStructure.GPIO_Mode  = GPIO_MODE_OUT_PP;
000070  f88d5003          STRB     r5,[sp,#3]
;;;86         GPIO_Init(GPIOA, &GPIO_InitStructure);
000074  4669              MOV      r1,sp
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       GPIO_Init
;;;87         GPIO_SetBits(GPIOA, GPIO_PIN_0);		
00007c  2101              MOVS     r1,#1
00007e  4630              MOV      r0,r6
000080  f7fffffe          BL       GPIO_SetBits
;;;88     }
000084  bdf8              POP      {r3-r7,pc}
;;;89     
                          ENDP

000086  0000              DCW      0x0000
                  |L6.136|
                          DCD      0x40010c00
                  |L6.140|
                          DCD      0x40010800

                          AREA ||i.cmd_info||, CODE, READONLY, ALIGN=1

                  cmd_info PROC
;;;225    
;;;226    void cmd_info()
000000  f7ffbffe          B.W      printInfo
;;;227    {
;;;228        printInfo();
;;;229    }
;;;230    
                          ENDP


                          AREA ||i.cmd_swdio||, CODE, READONLY, ALIGN=1

                  cmd_swdio PROC
;;;230    
;;;231    void cmd_swdio()
000000  f7ffbffe          B.W      cmdSwdio
;;;232    {
;;;233        cmdSwdio();
;;;234    }
;;;235    
                          ENDP


                          AREA ||i.ledFlash||, CODE, READONLY, ALIGN=2

                  ledFlash PROC
;;;235    
;;;236    void ledFlash()
000000  2140              MOVS     r1,#0x40
;;;237    {
;;;238        GPIO_SetBits(GPIOB, GPIO_PIN_6);
000002  4801              LDR      r0,|L9.8|
000004  f7ffbffe          B.W      GPIO_SetBits
;;;239        //Delayms(500);
;;;240        //GPIO_ResetBits(GPIOB, GPIO_PIN_6);
;;;241        //Delayms(500);
;;;242    }
;;;243    
                          ENDP

                  |L9.8|
                          DCD      0x40010c00

                          AREA ||i.ledTest||, CODE, READONLY, ALIGN=2

                  ledTest PROC
;;;174    
;;;175    void ledTest()
000000  2140              MOVS     r1,#0x40
;;;176    {
;;;177        GPIO_ResetBits(GPIOB, GPIO_PIN_6);
000002  4801              LDR      r0,|L10.8|
000004  f7ffbffe          B.W      GPIO_ResetBits
;;;178    }
;;;179    
                          ENDP

                  |L10.8|
                          DCD      0x40010c00

                          AREA ||i.loop||, CODE, READONLY, ALIGN=1

                  loop PROC
;;;350    
;;;351    void loop()
000000  b510              PUSH     {r4,lr}
;;;352    {
;;;353        //buttonTest();
;;;354    #if 1
;;;355        int c = -1;
000002  f04f34ff          MOV      r4,#0xffffffff
000006  f7fffffe          BL       uart_available
;;;356        if (serialAvailable()) {
00000a  b110              CBZ      r0,|L11.18|
;;;357            c = serialRead();
00000c  f7fffffe          BL       serialRead
000010  4604              MOV      r4,r0
                  |L11.18|
;;;358            //char s[2];
;;;359            //s[0] = c;
;;;360            //s[1] = 0;
;;;361            //serialPrint(s);
;;;362        }
;;;363    
;;;364        if (c != -1) {
000012  1c60              ADDS     r0,r4,#1
000014  d004              BEQ      |L11.32|
;;;365            checkSerial((char) c);
000016  b2e0              UXTB     r0,r4
000018  e8bd4010          POP      {r4,lr}
00001c  f7ffbffe          B.W      checkSerial
                  |L11.32|
;;;366        }
;;;367    #endif
;;;368    }
000020  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.printID||, CODE, READONLY, ALIGN=2

                  printID PROC
;;;205    
;;;206    void printID(const char *name, const char *value)
000000  b510              PUSH     {r4,lr}
;;;207    {
000002  460c              MOV      r4,r1
;;;208        serialPrint(name);
000004  f7fffffe          BL       serialPrint
;;;209        serialPrint(": ");
000008  a003              ADR      r0,|L12.24|
00000a  f7fffffe          BL       serialPrint
;;;210        serialPrintIID(value);
00000e  4620              MOV      r0,r4
000010  e8bd4010          POP      {r4,lr}
000014  f7ffbffe          B.W      serialPrintIID
;;;211    }
;;;212    
                          ENDP

                  |L12.24|
000018  3a2000            DCB      ": ",0
00001b  00                DCB      0

                          AREA ||i.printInfo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  printInfo PROC
;;;213    
;;;214    void printInfo()
000000  b500              PUSH     {lr}
;;;215    {
000002  b08b              SUB      sp,sp,#0x2c
;;;216    	uint32_t id[4];
;;;217    	char strId[24];
;;;218    
;;;219    	read_unique_id(id);
000004  a807              ADD      r0,sp,#0x1c
000006  f7fffffe          BL       read_unique_id
;;;220    
;;;221    	sprintf(strId, "%08X%08X%08X", id[0], id[1], id[2]);
00000a  9809              LDR      r0,[sp,#0x24]
00000c  9000              STR      r0,[sp,#0]
00000e  e9dd2307          LDRD     r2,r3,[sp,#0x1c]
000012  a104              ADR      r1,|L13.36|
000014  a801              ADD      r0,sp,#4
000016  f7fffffe          BL       __2sprintf
;;;222        serialPrintln(strId);
00001a  a801              ADD      r0,sp,#4
00001c  f7fffffe          BL       serialPrintln
;;;223    
;;;224    }
000020  b00b              ADD      sp,sp,#0x2c
000022  bd00              POP      {pc}
;;;225    
                          ENDP

                  |L13.36|
000024  25303858          DCB      "%08X%08X%08X",0
000028  25303858
00002c  25303858
000030  00      
000031  00                DCB      0
000032  00                DCB      0
000033  00                DCB      0

                          AREA ||i.printItem||, CODE, READONLY, ALIGN=2

                  printItem PROC
;;;193    
;;;194    void printItem(const char *name, const char *value)
000000  b510              PUSH     {r4,lr}
;;;195    {
000002  460c              MOV      r4,r1
;;;196        serialPrint(name);
000004  f7fffffe          BL       serialPrint
;;;197        serialPrint(": ");
000008  a003              ADR      r0,|L14.24|
00000a  f7fffffe          BL       serialPrint
;;;198        serialPrintln(value);
00000e  4620              MOV      r0,r4
000010  e8bd4010          POP      {r4,lr}
000014  f7ffbffe          B.W      serialPrintln
;;;199    }
;;;200    
                          ENDP

                  |L14.24|
000018  3a2000            DCB      ": ",0
00001b  00                DCB      0

                          AREA ||i.serialAvailable||, CODE, READONLY, ALIGN=1

                  serialAvailable PROC
;;;338    
;;;339    int serialAvailable()
000000  f7ffbffe          B.W      uart_available
;;;340    {
;;;341    	return uart_available();	
;;;342    }
;;;343    
                          ENDP


                          AREA ||i.serialPrint||, CODE, READONLY, ALIGN=1

                  serialPrint PROC
;;;145    
;;;146    void serialPrint(const char *str)
000000  b510              PUSH     {r4,lr}
;;;147    {
000002  4604              MOV      r4,r0
;;;148        uart_write_data(str, strlen(str));
000004  f7fffffe          BL       strlen
000008  b281              UXTH     r1,r0
00000a  4620              MOV      r0,r4
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      uart_write_data
;;;149    }
;;;150    
                          ENDP


                          AREA ||i.serialPrintIID||, CODE, READONLY, ALIGN=1

                  serialPrintIID PROC
;;;200    
;;;201    void serialPrintIID(const char *str)
000000  b510              PUSH     {r4,lr}
;;;202    {
000002  4604              MOV      r4,r0
;;;203    	uart_write_data(str, strlen(str));	
000004  f7fffffe          BL       strlen
000008  b281              UXTH     r1,r0
00000a  4620              MOV      r0,r4
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      uart_write_data
;;;204    }
;;;205    
                          ENDP


                          AREA ||i.serialPrintln||, CODE, READONLY, ALIGN=1

                  serialPrintln PROC
;;;150    
;;;151    void serialPrintln(const char *str)
000000  b510              PUSH     {r4,lr}
;;;152    {
000002  4604              MOV      r4,r0
;;;153    	uart_write_data(str, strlen(str));
000004  f7fffffe          BL       strlen
000008  b281              UXTH     r1,r0
00000a  4620              MOV      r0,r4
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      uart_write_data
;;;154    }
;;;155    
                          ENDP


                          AREA ||i.serialRead||, CODE, READONLY, ALIGN=1

                  serialRead PROC
;;;343    
;;;344    int serialRead()
000000  b508              PUSH     {r3,lr}
;;;345    {
;;;346    	uint8_t data;
;;;347        uart_read_data(&data, 1);
000002  2101              MOVS     r1,#1
000004  4668              MOV      r0,sp
000006  f7fffffe          BL       uart_read_data
;;;348        return data;
00000a  f89d0000          LDRB     r0,[sp,#0]
;;;349    } 
00000e  bd08              POP      {r3,pc}
;;;350    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  command
                          %        11

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  commands
                          DCD      ||.conststring||
                          DCD      0x00000005
                          DCD      ||.conststring||+0x8
                          DCD      0x00000025

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  494e464f          DCB      "INFO",0
000004  00      
000005  00                DCB      0
000006  00                DCB      0
000007  00                DCB      0
000008  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=1

                  cmd_index
000000  0000              DCB      0x00,0x00
                  cnt_20ms
000002  0000              DCW      0x0000
                  cmdRec
000004  5345545f          DCB      0x53,0x45,0x54,0x5f
000008  50494e2c          DCB      0x50,0x49,0x4e,0x2c
00000c  313b0053          DCB      0x31,0x3b,0x00,0x53
000010  45545f50          DCB      0x45,0x54,0x5f,0x50
000014  494e2c32          DCB      0x49,0x4e,0x2c,0x32
000018  3b005345          DCB      0x3b,0x00,0x53,0x45
00001c  545f5049          DCB      0x54,0x5f,0x50,0x49
000020  4e2c333b          DCB      0x4e,0x2c,0x33,0x3b
000024  00534554          DCB      0x00,0x53,0x45,0x54
000028  5f50494e          DCB      0x5f,0x50,0x49,0x4e
00002c  2c343b00          DCB      0x2c,0x34,0x3b,0x00
000030  42555454          DCB      0x42,0x55,0x54,0x54
000034  4f4e3b00          DCB      0x4f,0x4e,0x3b,0x00
000038  0000004c          DCB      0x00,0x00,0x00,0x4c
00003c  45443b00          DCB      0x45,0x44,0x3b,0x00
                          DCDU     0x00000000
000044  00000000          DCB      0x00,0x00,0x00,0x00
                          %        40
000070  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\src\\loop.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_loop_c_cmdRec____REV16|
#line 129 "..\\..\\cmsis-core\\core_cmInstr.h"
|__asm___6_loop_c_cmdRec____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_loop_c_cmdRec____REVSH|
#line 144
|__asm___6_loop_c_cmdRec____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

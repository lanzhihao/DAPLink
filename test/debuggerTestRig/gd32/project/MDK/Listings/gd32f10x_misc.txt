; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\gd32f10x_misc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\gd32f10x_misc.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\startup -I..\..\cmsis-core -I..\src -I..\..\GIGA32\inc -I..\..\GIGA32\src -I..\..\GIGA32\gd32\peripherals\inc -I..\..\GIGA32\gd32\peripherals\src -I.\RTE\_Target_1 -IF:\software\mdk\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\software\mdk\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F10X_MD -DDAPLINK_VERSION=242 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DINTERFACE_GD32F103 -DCPU_GD32F103CBT6 -DDAPLINK_HIC_ID=0x97969905 -DBL_TARGET_FLASH -DUSE_STDPERIPH_DRIVER -DGD32F10X_MD -DUSE_HSE_16MHZ --omf_browse=.\objects\gd32f10x_misc.crf ..\..\GIGA32\gd32\peripherals\src\gd32f10x_misc.c]
                          THUMB

                          AREA ||i.NVIC_Init||, CODE, READONLY, ALIGN=2

                  NVIC_Init PROC
;;;52       */
;;;53     void NVIC_Init(NVIC_InitPara* NVIC_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;54     {
;;;55         uint32_t temppriority = 0x00, temppreempt = 0x00, tempsub = 0x00;
000002  2200              MOVS     r2,#0
;;;56         
;;;57         if (NVIC_InitStruct->NVIC_IRQEnable != DISABLE)
000004  78c4              LDRB     r4,[r0,#3]
;;;58         {
;;;59             if (((SCB->AIRCR) & (uint32_t)0x700)==NVIC_PRIGROUP_0)
;;;60             {
;;;61                 temppreempt=0;
;;;62                 tempsub=0x4;
;;;63             }
;;;64             else if(((SCB->AIRCR) & (uint32_t)0x700)==NVIC_PRIGROUP_1)
;;;65             {
;;;66                 temppreempt=1;
;;;67                 tempsub=0x3;
;;;68             }
;;;69             else if(((SCB->AIRCR) & (uint32_t)0x700)==NVIC_PRIGROUP_2)
;;;70             {
;;;71                 temppreempt=2;
;;;72                 tempsub=0x2;
;;;73             }
;;;74             else if(((SCB->AIRCR) & (uint32_t)0x700)==NVIC_PRIGROUP_3)
;;;75             {
;;;76                 temppreempt=3;
;;;77                 tempsub=0x1;
;;;78             }
;;;79             else if(((SCB->AIRCR) & (uint32_t)0x700)==NVIC_PRIGROUP_4)
;;;80             {
;;;81                 temppreempt=4;
;;;82                 tempsub=0x0;
;;;83             }
;;;84         
;;;85             temppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQPreemptPriority << (0x4 - temppreempt);
;;;86             temppriority |=  NVIC_InitStruct->NVIC_IRQSubPriority &(0x0F >> (0x4 - tempsub));
;;;87             temppriority = temppriority << 0x04;
;;;88             
;;;89             NVIC->IP[NVIC_InitStruct->NVIC_IRQ] = temppriority;
000006  7803              LDRB     r3,[r0,#0]
000008  4611              MOV      r1,r2                 ;55
00000a  2501              MOVS     r5,#1                 ;66
00000c  b3ec              CBZ      r4,|L1.138|
00000e  4c27              LDR      r4,|L1.172|
000010  6826              LDR      r6,[r4,#0]            ;59
000012  f3c62602          UBFX     r6,r6,#8,#3           ;59
000016  2e07              CMP      r6,#7                 ;59
000018  d014              BEQ      |L1.68|
00001a  6826              LDR      r6,[r4,#0]            ;64
00001c  f3c62602          UBFX     r6,r6,#8,#3           ;64
000020  2e06              CMP      r6,#6                 ;64
000022  d011              BEQ      |L1.72|
000024  6826              LDR      r6,[r4,#0]            ;69
000026  f3c62602          UBFX     r6,r6,#8,#3           ;69
00002a  2e05              CMP      r6,#5                 ;69
00002c  d00f              BEQ      |L1.78|
00002e  6826              LDR      r6,[r4,#0]            ;74
000030  f3c62602          UBFX     r6,r6,#8,#3           ;74
000034  2e04              CMP      r6,#4                 ;74
000036  d00d              BEQ      |L1.84|
000038  6824              LDR      r4,[r4,#0]            ;79
00003a  f3c42402          UBFX     r4,r4,#8,#3           ;79
00003e  2c03              CMP      r4,#3                 ;79
000040  d00b              BEQ      |L1.90|
000042  e00b              B        |L1.92|
                  |L1.68|
000044  2104              MOVS     r1,#4                 ;62
000046  e009              B        |L1.92|
                  |L1.72|
000048  2201              MOVS     r2,#1                 ;66
00004a  2103              MOVS     r1,#3                 ;67
00004c  e006              B        |L1.92|
                  |L1.78|
00004e  2202              MOVS     r2,#2                 ;71
000050  4611              MOV      r1,r2                 ;72
000052  e003              B        |L1.92|
                  |L1.84|
000054  2203              MOVS     r2,#3                 ;76
000056  2101              MOVS     r1,#1                 ;77
000058  e000              B        |L1.92|
                  |L1.90|
00005a  2204              MOVS     r2,#4                 ;81
                  |L1.92|
00005c  7844              LDRB     r4,[r0,#1]            ;85
00005e  f1c20204          RSB      r2,r2,#4              ;85
000062  4094              LSLS     r4,r4,r2              ;85
000064  f1c10604          RSB      r6,r1,#4              ;86
000068  7882              LDRB     r2,[r0,#2]            ;86
00006a  210f              MOVS     r1,#0xf               ;86
00006c  40f1              LSRS     r1,r1,r6              ;86
00006e  400a              ANDS     r2,r2,r1              ;86
000070  4322              ORRS     r2,r2,r4              ;86
000072  f10323e0          ADD      r3,r3,#0xe000e000     ;87
000076  0111              LSLS     r1,r2,#4              ;87
000078  f8831400          STRB     r1,[r3,#0x400]
;;;90         
;;;91             /* Enable the Selected IRQ Channels --------------------------------------*/
;;;92             NVIC->ISER[NVIC_InitStruct->NVIC_IRQ >> 0x05] = (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQ & (uint8_t)0x1F);
00007c  7800              LDRB     r0,[r0,#0]
00007e  f000011f          AND      r1,r0,#0x1f
000082  408d              LSLS     r5,r5,r1
000084  0940              LSRS     r0,r0,#5
000086  0080              LSLS     r0,r0,#2
000088  e000              B        |L1.140|
                  |L1.138|
00008a  e004              B        |L1.150|
                  |L1.140|
00008c  f10020e0          ADD      r0,r0,#0xe000e000
000090  f8c05100          STR      r5,[r0,#0x100]
;;;93         }
;;;94         else
;;;95         {
;;;96             /* Disable the Selected IRQ Channels -------------------------------------*/
;;;97             NVIC->ICER[NVIC_InitStruct->NVIC_IRQ >> 0x05] = (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQ & (uint8_t)0x1F);
;;;98         }
;;;99     }
000094  bd70              POP      {r4-r6,pc}
                  |L1.150|
000096  f003001f          AND      r0,r3,#0x1f           ;97
00009a  4085              LSLS     r5,r5,r0              ;97
00009c  0958              LSRS     r0,r3,#5              ;97
00009e  0080              LSLS     r0,r0,#2              ;97
0000a0  f10020e0          ADD      r0,r0,#0xe000e000     ;97
0000a4  f8c05180          STR      r5,[r0,#0x180]        ;97
0000a8  bd70              POP      {r4-r6,pc}
;;;100    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
                          DCD      0xe000ed0c

                          AREA ||i.NVIC_PRIGroup_Enable||, CODE, READONLY, ALIGN=2

                  NVIC_PRIGroup_Enable PROC
;;;41       */
;;;42     void NVIC_PRIGroup_Enable(uint32_t NVIC_PRIGroup)
000000  4902              LDR      r1,|L2.12|
;;;43     {
;;;44         /* Set the priority grouping value */
;;;45         SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PRIGroup;
000002  4308              ORRS     r0,r0,r1
000004  4902              LDR      r1,|L2.16|
000006  6008              STR      r0,[r1,#0]
;;;46     }
000008  4770              BX       lr
;;;47     
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      0x05fa0000
                  |L2.16|
                          DCD      0xe000ed0c

                          AREA ||i.NVIC_SystemLowPowerConfig||, CODE, READONLY, ALIGN=2

                  NVIC_SystemLowPowerConfig PROC
;;;117      */
;;;118    void NVIC_SystemLowPowerConfig(uint8_t LowPowerMode, TypeState NewValue)
000000  4a04              LDR      r2,|L3.20|
;;;119    { 
;;;120        if (NewValue != DISABLE)
000002  2900              CMP      r1,#0
;;;121        {
;;;122            SCB->SCR |= LowPowerMode;
;;;123        }
;;;124        else
;;;125        {
;;;126            SCB->SCR &= (~(uint32_t)LowPowerMode);
000004  6811              LDR      r1,[r2,#0]
000006  d001              BEQ      |L3.12|
000008  4301              ORRS     r1,r1,r0              ;122
00000a  e000              B        |L3.14|
                  |L3.12|
00000c  4381              BICS     r1,r1,r0
                  |L3.14|
00000e  6011              STR      r1,[r2,#0]            ;122
;;;127        }
;;;128    }
000010  4770              BX       lr
;;;129    
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0xe000ed10

                          AREA ||i.NVIC_VectTableSet||, CODE, READONLY, ALIGN=2

                  NVIC_VectTableSet PROC
;;;106      */
;;;107    void NVIC_VectTableSet(uint32_t NVIC_VectTab, uint32_t Offset)
000000  4a02              LDR      r2,|L4.12|
;;;108    { 
;;;109        SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
000002  4011              ANDS     r1,r1,r2
000004  4301              ORRS     r1,r1,r0
000006  4802              LDR      r0,|L4.16|
000008  6001              STR      r1,[r0,#0]
;;;110    }
00000a  4770              BX       lr
;;;111    
                          ENDP

                  |L4.12|
                          DCD      0x1fffff80
                  |L4.16|
                          DCD      0xe000ed08

                          AREA ||i.SysTick_CKSource_Enable||, CODE, READONLY, ALIGN=1

                  SysTick_CKSource_Enable PROC
;;;134      */
;;;135    void SysTick_CKSource_Enable(uint32_t SysTick_CKSource)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;136    {
;;;137        if (SysTick_CKSource == SYSTICK_CKSOURCE_HCLK)
000004  2804              CMP      r0,#4
;;;138        {
;;;139            SysTick->CTRL |= SYSTICK_CKSOURCE_HCLK;
;;;140        }
;;;141        else
;;;142        {
;;;143            SysTick->CTRL &= SYSTICK_CKSOURCE_HCLK_DIV8;
000006  6908              LDR      r0,[r1,#0x10]
000008  d003              BEQ      |L5.18|
00000a  f0200004          BIC      r0,r0,#4
                  |L5.14|
00000e  6108              STR      r0,[r1,#0x10]         ;139
;;;144        }
;;;145    }
000010  4770              BX       lr
                  |L5.18|
000012  f0400004          ORR      r0,r0,#4              ;139
000016  e7fa              B        |L5.14|
;;;146    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\GIGA32\\gd32\\peripherals\\src\\gd32f10x_misc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_misc_c_dc282d6c____REV16|
#line 129 "..\\..\\cmsis-core\\core_cmInstr.h"
|__asm___15_gd32f10x_misc_c_dc282d6c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_misc_c_dc282d6c____REVSH|
#line 144
|__asm___15_gd32f10x_misc_c_dc282d6c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

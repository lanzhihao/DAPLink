; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\gd32f10x_exti.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\gd32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\startup -I..\..\cmsis-core -I..\src -I..\..\GIGA32\inc -I..\..\GIGA32\src -I..\..\GIGA32\gd32\peripherals\inc -I..\..\GIGA32\gd32\peripherals\src -I.\RTE\_Target_1 -IF:\software\mdk\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -IF:\software\mdk\ARM\CMSIS\Include -D__UVISION_VERSION=524 -DSTM32F10X_MD -DDAPLINK_VERSION=242 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DINTERFACE_GD32F103 -DCPU_GD32F103CBT6 -DDAPLINK_HIC_ID=0x97969905 -DBL_TARGET_FLASH -DUSE_STDPERIPH_DRIVER -DGD32F10X_MD -DUSE_HSE_16MHZ --omf_browse=.\objects\gd32f10x_exti.crf ..\..\GIGA32\gd32\peripherals\src\gd32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearBitState||, CODE, READONLY, ALIGN=2

                  EXTI_ClearBitState PROC
;;;160      */
;;;161    void EXTI_ClearBitState(uint32_t EXTI_LINE)
000000  4901              LDR      r1,|L1.8|
;;;162    {
;;;163        /* Clear the bit flag of the selected EXTI lines */
;;;164        EXTI->PD = EXTI_LINE;
000002  6008              STR      r0,[r1,#0]
;;;165    }
000004  4770              BX       lr
;;;166    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearIntBitState||, CODE, READONLY, ALIGN=2

                  EXTI_ClearIntBitState PROC
;;;193      */
;;;194    void EXTI_ClearIntBitState(uint32_t EXTI_LINE)
000000  4901              LDR      r1,|L2.8|
;;;195    {
;;;196        /* Clear the interrupt bit flag of the selected EXTI lines */
;;;197        EXTI->PD = EXTI_LINE;
000002  6008              STR      r0,[r1,#0]
;;;198    }
000004  4770              BX       lr
;;;199    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;56       */
;;;57     void EXTI_DeInit(EXTI_InitPara* EXTI_InitParaStruct)
000000  4a09              LDR      r2,|L3.40|
;;;58     {
;;;59         /* Reset the EXTI peripheral registers */
;;;60         EXTI->IER = EXTI_IER_RST;
000002  2100              MOVS     r1,#0
000004  6011              STR      r1,[r2,#0]
;;;61         EXTI->EER = EXTI_EER_RST;
000006  1d12              ADDS     r2,r2,#4
000008  6011              STR      r1,[r2,#0]
;;;62         EXTI->RTE = EXTI_RTE_RST;
00000a  1d12              ADDS     r2,r2,#4
00000c  6011              STR      r1,[r2,#0]
;;;63         EXTI->FTE = EXTI_FTE_RST;
00000e  1d12              ADDS     r2,r2,#4
000010  6011              STR      r1,[r2,#0]
;;;64         EXTI->PD = EXTI_PD_RST;
000012  4b05              LDR      r3,|L3.40|
000014  4a05              LDR      r2,|L3.44|
000016  3314              ADDS     r3,r3,#0x14
000018  601a              STR      r2,[r3,#0]
;;;65         
;;;66         /* Reset the struct EXTI_InitPara */
;;;67         EXTI_InitParaStruct->EXTI_LINE = EXTI_LINE_NULL;
;;;68         EXTI_InitParaStruct->EXTI_Mode = EXTI_Mode_Interrupt;
00001a  6001              STR      r1,[r0,#0]
00001c  7101              STRB     r1,[r0,#4]
;;;69         EXTI_InitParaStruct->EXTI_Trigger = EXTI_Trigger_Falling;
00001e  220c              MOVS     r2,#0xc
000020  7142              STRB     r2,[r0,#5]
;;;70         EXTI_InitParaStruct->EXTI_LINEEnable = DISABLE;
000022  7181              STRB     r1,[r0,#6]
;;;71     }
000024  4770              BX       lr
;;;72     
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      0x40010400
                  |L3.44|
                          DCD      0x000fffff

                          AREA ||i.EXTI_GetBitState||, CODE, READONLY, ALIGN=2

                  EXTI_GetBitState PROC
;;;139      */
;;;140    TypeState EXTI_GetBitState(uint32_t EXTI_LINE)
000000  4903              LDR      r1,|L4.16|
;;;141    {
;;;142        /* Check and get the selected EXTI lines flag */
;;;143        if ((EXTI->PD & EXTI_LINE) != (uint32_t)RESET)
000002  6809              LDR      r1,[r1,#0]
000004  4201              TST      r1,r0
000006  d001              BEQ      |L4.12|
;;;144        {
;;;145            /* EXTI_LINE bit is SET */
;;;146            return SET;
000008  2001              MOVS     r0,#1
;;;147        }
;;;148        else
;;;149        {
;;;150            /* EXTI_LINE bit is RESET */
;;;151            return RESET;
;;;152        }
;;;153    }
00000a  4770              BX       lr
                  |L4.12|
00000c  2000              MOVS     r0,#0                 ;151
00000e  4770              BX       lr
;;;154    
                          ENDP

                  |L4.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetIntBitState||, CODE, READONLY, ALIGN=2

                  EXTI_GetIntBitState PROC
;;;172      */
;;;173    TypeState EXTI_GetIntBitState(uint32_t EXTI_LINE)
000000  4906              LDR      r1,|L5.28|
;;;174    {
;;;175        /* Check and get the interrupt source is set or not */
;;;176        if (((EXTI->PD & EXTI_LINE) != (uint32_t)RESET) && ((EXTI->IER & EXTI_LINE) != (uint32_t)RESET))
000002  6809              LDR      r1,[r1,#0]
000004  4201              TST      r1,r0
000006  d006              BEQ      |L5.22|
000008  4904              LDR      r1,|L5.28|
00000a  3914              SUBS     r1,r1,#0x14
00000c  6809              LDR      r1,[r1,#0]
00000e  4201              TST      r1,r0
000010  d001              BEQ      |L5.22|
;;;177        {
;;;178            /* The interrupt bit of EXTI_LINE is SET */
;;;179            return SET;
000012  2001              MOVS     r0,#1
;;;180        }
;;;181        else
;;;182        {
;;;183            /* The interrupt bit of EXTI_LINE is RESET */
;;;184            return RESET;
;;;185        }
;;;186    }
000014  4770              BX       lr
                  |L5.22|
000016  2000              MOVS     r0,#0                 ;184
000018  4770              BX       lr
;;;187    
                          ENDP

00001a  0000              DCW      0x0000
                  |L5.28|
                          DCD      0x40010414

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;77       */
;;;78     void EXTI_Init(EXTI_InitPara* EXTI_InitParaStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;79     {
;;;80         uint32_t temp = 0;
;;;81         
;;;82         temp = (uint32_t)EXTI_BASE;
000002  4a1a              LDR      r2,|L6.108|
;;;83         
;;;84         if (EXTI_InitParaStruct->EXTI_LINEEnable != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6801              LDR      r1,[r0,#0]            ;79
000008  b353              CBZ      r3,|L6.96|
;;;85         {
;;;86             /* Clear Interrupt and Event from EXTI Lines */
;;;87             EXTI->IER &= ~EXTI_InitParaStruct->EXTI_LINE;
00000a  6813              LDR      r3,[r2,#0]
00000c  438b              BICS     r3,r3,r1
00000e  6013              STR      r3,[r2,#0]
;;;88             EXTI->EER &= ~EXTI_InitParaStruct->EXTI_LINE;
000010  1d11              ADDS     r1,r2,#4
000012  680b              LDR      r3,[r1,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  600b              STR      r3,[r1,#0]
;;;89             
;;;90             temp += EXTI_InitParaStruct->EXTI_Mode;
00001a  7901              LDRB     r1,[r0,#4]
00001c  4411              ADD      r1,r1,r2
;;;91             
;;;92             *(__IO uint32_t *) temp |= EXTI_InitParaStruct->EXTI_LINE;
00001e  680b              LDR      r3,[r1,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  600b              STR      r3,[r1,#0]
;;;93             
;;;94             /* Clear the Rising and Falling edge trigger enable registers */
;;;95             EXTI->RTE &= ~EXTI_InitParaStruct->EXTI_LINE;
000026  4b11              LDR      r3,|L6.108|
000028  3308              ADDS     r3,r3,#8
00002a  6819              LDR      r1,[r3,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a1              BICS     r1,r1,r4
000030  6019              STR      r1,[r3,#0]
;;;96             EXTI->FTE &= ~EXTI_InitParaStruct->EXTI_LINE;
000032  1d1c              ADDS     r4,r3,#4
000034  6821              LDR      r1,[r4,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43a9              BICS     r1,r1,r5
00003a  6021              STR      r1,[r4,#0]
;;;97             
;;;98             /* Select the trigger type for the selected EXTI Lines */
;;;99             if (EXTI_InitParaStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  7941              LDRB     r1,[r0,#5]
00003e  2910              CMP      r1,#0x10
000040  d005              BEQ      |L6.78|
;;;100            {
;;;101                /* Rising and Falling edge trigger are both selected */
;;;102                EXTI->RTE |= EXTI_InitParaStruct->EXTI_LINE;
;;;103                EXTI->FTE |= EXTI_InitParaStruct->EXTI_LINE;
;;;104            }
;;;105            else
;;;106            {
;;;107                temp = (uint32_t)EXTI_BASE;
;;;108                temp += EXTI_InitParaStruct->EXTI_Trigger;
000042  4411              ADD      r1,r1,r2
;;;109                
;;;110                *(__IO uint32_t *) temp |= EXTI_InitParaStruct->EXTI_LINE;
000044  680a              LDR      r2,[r1,#0]
000046  6800              LDR      r0,[r0,#0]
000048  4302              ORRS     r2,r2,r0
00004a  600a              STR      r2,[r1,#0]
;;;111            }
;;;112        }
;;;113        else
;;;114        {
;;;115            temp += EXTI_InitParaStruct->EXTI_Mode;
;;;116            
;;;117            /* Disable the selected EXTI lines */
;;;118            *(__IO uint32_t *) temp &= ~EXTI_InitParaStruct->EXTI_LINE;
;;;119        }
;;;120    }
00004c  bd30              POP      {r4,r5,pc}
                  |L6.78|
00004e  6819              LDR      r1,[r3,#0]            ;102
000050  6802              LDR      r2,[r0,#0]            ;102
000052  4311              ORRS     r1,r1,r2              ;102
000054  6019              STR      r1,[r3,#0]            ;102
000056  6821              LDR      r1,[r4,#0]            ;103
000058  6800              LDR      r0,[r0,#0]            ;103
00005a  4301              ORRS     r1,r1,r0              ;103
00005c  6021              STR      r1,[r4,#0]            ;103
00005e  bd30              POP      {r4,r5,pc}
                  |L6.96|
000060  7900              LDRB     r0,[r0,#4]            ;115
000062  4410              ADD      r0,r0,r2              ;115
000064  6802              LDR      r2,[r0,#0]            ;118
000066  438a              BICS     r2,r2,r1              ;118
000068  6002              STR      r2,[r0,#0]            ;118
00006a  bd30              POP      {r4,r5,pc}
;;;121    
                          ENDP

                  |L6.108|
                          DCD      0x40010400

                          AREA ||i.EXTI_SWINT_Enable||, CODE, READONLY, ALIGN=2

                  EXTI_SWINT_Enable PROC
;;;127      */
;;;128    void EXTI_SWINT_Enable(uint32_t EXTI_LINE)
000000  4902              LDR      r1,|L7.12|
;;;129    {
;;;130        /* Enable the software interrupt or event request of the selected EXTI Lines */
;;;131        EXTI->SIE |= EXTI_LINE;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;132    }
000008  4770              BX       lr
;;;133    
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      0x40010410

;*** Start embedded assembler ***

#line 1 "..\\..\\GIGA32\\gd32\\peripherals\\src\\gd32f10x_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_exti_c_28b3b60e____REV16|
#line 129 "..\\..\\cmsis-core\\core_cmInstr.h"
|__asm___15_gd32f10x_exti_c_28b3b60e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_gd32f10x_exti_c_28b3b60e____REVSH|
#line 144
|__asm___15_gd32f10x_exti_c_28b3b60e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
